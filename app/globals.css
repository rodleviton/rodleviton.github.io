@import "tailwindcss";

@layer base {

  /**
   * Light Mode (Default) Theme
   * 
   * Applied to the :root element, these variables define the default
   * light theme appearance for the application.
   */
  :root {
    --background: var(--color-white);
    --background-muted: var(--color-neutral-300);
    --foreground: oklch(0.2138 0.0196 284.62);
    --foreground-muted: var(--color-neutral-700);
    --accent: oklch(0.6635 0.2037 6.85);
  }

  /**
   * Dark Mode Theme
   * 
   * Applied when the 'dark' class is present on a parent element.
   * Inverts the color relationship for dark mode experience.
   */
  .dark {
    --background: oklch(0.2138 0.0196 284.62);
    --background-muted: var(--color-neutral-600);
    --foreground: var(--color-white);
    --foreground-muted: var(--color-neutral-300);
  }
}

@theme {
  --font-sans: var(--font-sans);
  /* Body text font family */
  --font-heading: var(--font-heading);
  /* Heading text font family */


  --color-ink: var(--ink);
  --color-foreground: var(--foreground);
  --color-foreground-muted: var(--foreground-muted);
  --color-accent: var(--accent);
  --color-background: var(--background);
  --color-background-muted: var(--background-muted);

  --text-2xs: 0.625rem;
}


/**
 * Custom Variant Definitions
 * 
 * Defines custom Tailwind variants for specific use cases that aren't
 * covered by the default Tailwind variant system.
 */
@variant dark (&:where(.dark, .dark *));
/* Dark mode variant for class-based theming */

/**
  * Base Layer Styles
  * 
  * Foundational styles that apply to core HTML elements and establish
  * the baseline appearance for the entire application.
  */
@layer base {

  /**
    * Body Element Configuration
    * 
    * Sets up the primary container styles using theme tokens for consistency
    * with the theming system and enables advanced typography features.
    */
  body {
    @apply bg-background text-foreground;
    /* Uses semantic color tokens from theme */
    font-feature-settings: "rlig" 1, "calt" 1;
    /* Enables ligatures and contextual alternates */
  }
}

@utility container {
  margin-inline: auto;

  @apply xl:max-w-[60rem] px-4 lg:px-8;
}

/**
 * Debug Grid Utility
 * 
 * Shows faint borders on all elements to help with layout debugging and alignment.
 * Toggle by adding 'debug-grid' class to body element.
 */
.debug-grid * {
  @apply outline-foreground/3 outline-dotted;
}

/**
 *  Highlight flex containers with gaps
 */
.debug-gaps [class*="gap-"] {
  @apply bg-background-muted/1;
}

/**
 * Custom Animations
 */
@keyframes spin-once {
  0% {
    transform: rotate(0deg) scale(0.9);
    opacity: 0.5;
  }

  50% {
    transform: rotate(180deg) scale(1.05);
    opacity: 0.8;
  }

  100% {
    transform: rotate(360deg) scale(1);
    opacity: 1;
  }
}

.animate-spin-once {
  animation: spin-once 0.7s ease-out forwards;
}